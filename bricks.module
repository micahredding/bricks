<?php

/* This module defines a few workflow functions and helper functions 
   for declaring blocks in code.

   bricks_block_content => an array of the current field content of the block
   bricks_block_save    => process an edit array to save the update content
   bricks_array_to_html => create an html string from the array content
   bricks_array_to_form => create a configuration form from the array content
*/

include 'bricks.private.inc';


/* @begin Public Functions */
function bricks_block_content($delta) {
  $current = array();
  $defaults = _bricks_defaults($delta);
  foreach($defaults as $fieldname => $fielddefault) {
    $current[$fieldname] = bricks_get(_b($delta, $fieldname), $fielddefault);
  }
  return $current;
}

function bricks_block_save($delta, $edit) {
  $defaults = _bricks_defaults($delta);
  foreach($edit as $fieldname => $fieldcontent) {
    if($fieldcontent == $defaults[$fieldname]) {
      bricks_unset(_b($delta, $fieldname));
    } else {
      bricks_set(_b($delta, $fieldname), $fieldcontent);
    }
  }
}

/* @begin Public Helper Functions */
function bricks_array_to_html($block_array) {
  $block = '<div class="block-content>';
  foreach($block_array as $fieldname => $fieldcontent) {
    $block .= '<div class="block-' . $fieldname . '">' . check_markup($fieldcontent) . '</div>';
  }
  $block .= '</div>';
  return $block;
}

function bricks_array_to_form($block) {
  $form = array();
  foreach($block as $fieldname => $fieldcontent) {
    $form[$fieldname] = array(
      '#type' => 'textfield', 
      '#title' => t($fieldname), 
      '#description' => t('This text will appear in the block.'), 
      '#default_value' => $fieldcontent,
    );    
  }
  return $form;
}