<?php

/* This module defines a few workflow functions and helper functions 
   for declaring blocks in code.

   bricks_block_load      => an array of the current field content of the block
   bricks_block_save      => process an edit array to save the update content
   bricks_block_configure => create a configuration form from the array content
   bricks_block_content   => create an html string from the array content

   The last three functions correspond to drupal block hooks, and act as drop-in replacements for normal block functionality.
*/

include 'bricks.hooks.inc';
include 'bricks.private.inc';
include 'bricks.form.inc';
include 'bricks.pages.inc';

/* @begin Public Functions */

/* This function loads the defaults and current variables, and returns an array of field=>content */
function bricks_block_load($delta) {
  $current = array();
  $defaults = _bricks_defaults($delta);
  foreach($defaults as $fieldname => $fielddefault) {
    $current[$fieldname] = bricks_get(_b($delta, $fieldname), $fielddefault);
  }
  return $current;
}

/* This returns HTML of the block content */
function bricks_block_content($delta) {
  $block_array = bricks_block_load($delta);
  $html = bricks_array_to_html($block_array);
  return $html;
}

/* This returns a form render array for all the blocks fields */
function bricks_block_configure($delta) {
  $block = bricks_block_load($delta);
  $form = bricks_array_to_form($block);
  return $form;
}

/* This processes an edit array, and saves the fields */
function bricks_block_save($delta, $edit) {
  $defaults = _bricks_defaults($delta);
  foreach($edit as $fieldname => $fieldcontent) {
    if($fieldcontent == $defaults[$fieldname]) {
      bricks_unset(_b($delta, $fieldname));
    } else {
      bricks_set(_b($delta, $fieldname), $fieldcontent);
    }
  }
}
/* @end Public Functions */